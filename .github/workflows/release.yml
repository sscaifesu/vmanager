name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - os: linux-amd64
            runner: ubuntu-latest
            cc: gcc
          - os: linux-arm64
            runner: ubuntu-latest
            cc: aarch64-linux-gnu-gcc
          - os: macos-amd64
            runner: macos-latest
            cc: clang
          - os: macos-arm64
            runner: macos-latest
            cc: clang

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies (Linux)
        if: startsWith(matrix.os, 'linux')
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libncurses5-dev
          if [ "${{ matrix.os }}" = "linux-arm64" ]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu
          fi

      - name: Install dependencies (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install curl ncurses

      - name: Build vmanager
        working-directory: v4
        env:
          CC: ${{ matrix.cc }}
        run: |
          if [ "${{ matrix.os }}" = "linux-arm64" ]; then
            # Cross-compile for ARM64
            make CC=aarch64-linux-gnu-gcc LDFLAGS="-lcurl -lncurses -lm"
          else
            make
          fi
          
      - name: Prepare artifact
        run: |
          mkdir -p release
          cp v4/vmanager release/vmanager-${{ matrix.os }}
          chmod +x release/vmanager-${{ matrix.os }}
          
      - name: Generate checksums
        working-directory: release
        run: |
          sha256sum vmanager-${{ matrix.os }} > SHA256SUMS-${{ matrix.os }}
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: vmanager-${{ matrix.os }}
          path: release/*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Prepare release files
        run: |
          mkdir -p release
          find artifacts -type f -exec cp {} release/ \;
          cd release
          cat SHA256SUMS-* > SHA256SUMS
          rm SHA256SUMS-*
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
          body: |
            ## vmanager v4.0.0 Release
            
            Proxmox VM Management Tool
            
            ### Features
            - CLI and TUI dual modes
            - Batch operations support (ranges, comma-separated)
            - VM management (start, stop, reboot, suspend, resume, destroy, clone)
            - Real-time monitoring
            - Network and storage information
            
            ### Supported Platforms
            - Linux x86_64
            - Linux ARM64
            - macOS x86_64
            - macOS ARM64 (Apple Silicon)
            
            ### Installation
            ```bash
            # Download the binary for your platform
            chmod +x vmanager-<platform>
            sudo mv vmanager-<platform> /usr/local/bin/vmanager
            
            # Configure
            vmanager --config
            
            # Use
            vmanager --help
            vmanager --tui
            ```
            
            ### Checksums
            See SHA256SUMS file for verification.
            
            ### Team
            Copyright (C) 2025 YXWA Infosec Lab
            Authors: Crystal & evalEvil
            License: GPL-3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
