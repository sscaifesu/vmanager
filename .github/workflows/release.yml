name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-linux-amd64:
    name: Build Linux x86_64
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libncurses5-dev
          
      - name: Build
        working-directory: v4
        run: make
        
      - name: Prepare artifact
        run: |
          mkdir -p dist
          cp v4/vmanager dist/vmanager-linux-amd64
          chmod +x dist/vmanager-linux-amd64
          cd dist
          sha256sum vmanager-linux-amd64 > vmanager-linux-amd64.sha256
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-amd64
          path: dist/*

  build-linux-arm64:
    name: Build Linux ARM64
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
          
      - name: Build in ARM64 container
        run: |
          docker run --rm --platform linux/arm64 \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace/v4 \
            arm64v8/ubuntu:22.04 \
            bash -c "
              apt-get update && \
              apt-get install -y build-essential libcurl4-openssl-dev libncurses5-dev && \
              make clean && \
              make
            "
        
      - name: Prepare artifact
        run: |
          mkdir -p dist
          cp v4/vmanager dist/vmanager-linux-arm64
          chmod +x dist/vmanager-linux-arm64
          cd dist
          sha256sum vmanager-linux-arm64 > vmanager-linux-arm64.sha256
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-arm64
          path: dist/*

  build-macos-amd64:
    name: Build macOS x86_64
    runs-on: macos-13
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Install dependencies
        run: brew install curl ncurses
        
      - name: Build
        working-directory: v4
        run: make
        
      - name: Prepare artifact
        run: |
          mkdir -p dist
          cp v4/vmanager dist/vmanager-macos-amd64
          chmod +x dist/vmanager-macos-amd64
          cd dist
          shasum -a 256 vmanager-macos-amd64 > vmanager-macos-amd64.sha256
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-amd64
          path: dist/*

  build-macos-arm64:
    name: Build macOS ARM64
    runs-on: macos-14
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Install dependencies
        run: brew install curl ncurses
        
      - name: Build
        working-directory: v4
        run: make
        
      - name: Prepare artifact
        run: |
          mkdir -p dist
          cp v4/vmanager dist/vmanager-macos-arm64
          chmod +x dist/vmanager-macos-arm64
          cd dist
          shasum -a 256 vmanager-macos-arm64 > vmanager-macos-arm64.sha256
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-arm64
          path: dist/*

  release:
    name: Create Release
    needs: [build-linux-amd64, build-linux-arm64, build-macos-amd64, build-macos-arm64]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Prepare release
        run: |
          mkdir -p release
          cp artifacts/linux-amd64/* release/
          cp artifacts/linux-arm64/* release/
          cp artifacts/macos-amd64/* release/
          cp artifacts/macos-arm64/* release/
          cd release
          cat *.sha256 > SHA256SUMS
          ls -lh
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
          body: |
            # vmanager ${{ github.ref_name }}
            
            Proxmox VM Management Tool
            
            ## 功能特点
            
            - CLI 和 TUI 双模式
            - 批量操作（范围、逗号分隔）
            - 完整的 VM 管理
            - 实时监控
            - 模块化架构
            - 零编译警告
            
            ## 支持平台
            
            - Linux x86_64
            - Linux ARM64
            - macOS x86_64 (Intel)
            - macOS ARM64 (Apple Silicon)
            
            ## 安装方法
            
            ```bash
            # 下载二进制文件
            wget https://github.com/sscaifesu/vmanager/releases/download/${{ github.ref_name }}/vmanager-linux-amd64
            
            # 验证校验和
            sha256sum -c SHA256SUMS
            
            # 安装
            chmod +x vmanager-linux-amd64
            sudo mv vmanager-linux-amd64 /usr/local/bin/vmanager
            
            # 使用方式
            vmanager --help
            vmanager --tui
            ```
            
            ## 开发团队
            
            Copyright (C) 2025 YXWA Infosec Lab  
            Authors: Crystal & evalEvil  
            License: GPL-3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
